#include<graphics.h> 
#include<conio.h> 
#include<iostream.h> 
#include<math.h> 
const int INSIDE =0; 
const int LEFT =1; 
const int RIGHT =2; 
const int BOTTOM =4; 
const int TOP= 8; 
//Window Boundaries 
const int x_min=100, y_min=100, x_max =400, y_max=300; 
int computecode(int x,int y){ 
int code = INSIDE; 
if (x<x_min) 
code =LEFT ; 
else if(x > x_max) 
code = RIGHT; 
if(y< y_min ) 
code = BOTTOM; 
else if (y>y_max) 
code =TOP; 
return code ; 
} 
void cohenSutherlandclip(int x1,int y1,int x2, int y2) 
{ 
int code1 =computecode(x1,y1); 
int code2= computecode (x2,y2); 
typedef int bool; 
#define true 1 ; 
#define false 0 ; 
int accept = 0 ; 
while (1) 
{ 
if(code1==0 && code2==0) 
{ 
accept =1; 
break; 
} 
else if (code1 & code2 ) { 
break ; 
}      
else { 
int code_out; 
int x,y; 
code_out =code1 ? code1: code2; 
if (code_out &TOP){ 
x=x1+(x2-x1)*(y_max-y1)/(y2-y1); 
y = y_max; 
} 
else if (code_out &BOTTOM) 
{ 
x= x1+(x2-x1)*(y_min-y1)/(y2-y1); 
y=y_min; 
} 
else if (code_out &RIGHT ) 
{ 
y= y1+(y2-y1)*(x_min-x1)/(x2-x1); 
x=x_max; 
} 
else if(code_out &LEFT) 
{ 
y=y1+(y2-y2)*(x_min-x1)/(x2-x1); 
x=x_min; 
} 
if(code_out == code1) 
{ 
x1=x; 
x2=y; 
code1 = computecode(x1,y1); 
} 
else { 
x2=x; 
y2=y; 
code2 =computecode(x2,y2); 
} 
} 
} 
if (accept) 
{ 
setcolor(GREEN); 
line(x1,y1,x2,y2); 
cout <<"Line accepted from("<<x1<<","<<y1<<" ) to ("<< x2 <<","<<y2<<")\n"; 
} 
else 
{ 
cout <<"Line rejected\n"; 
} 
} 
int main() 
{ 
int gd =DETECT ,gm; 
initgraph(&gd,&gm,"C:\\TURBOC3\\BGI"); 
setcolor(WHITE); 
rectangle(x_min,y_min,x_max,y_max); 
int x1=50,y1=150,x2=450,y2=200; 
setcolor(RED); 
line (x1,y1,x2,y2) ; 
cohenSutherlandclip(x1,y1,x2,y2); 
getch(); 
closegraph(); 
return 0; 
}